@{
    ViewData["Title"] = "GetFinPrograms";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="panel p-0">
    <div class="gridItem">
        <script>
            kendo.culture("en-US"); // Set the desired culture
        </script>
        <div>

            @(
                Html.Kendo().Grid<RSCS.FinancingStatements.Web.Models.FinPrograms>().Name("grid")
                .Scrollable(s => s.Height(388))
                // .ToolBar(tools => tools.Excel()).Excel(excel => excel.AllPages(true).FileName("FinProgramsList.xlsx"))
                .ToolBar(tools => tools.Pdf()).Pdf(pdf => pdf.AllPages(true).FileName("FinProgramsList.Pdf"))
                .ToolBar(toolbar => toolbar.Custom()
                .IconClass("k-svg-icon k-svg-i-file-excel k-button-icon")
                .Text("Export to Excel")
                .HtmlAttributes(new { @class = "k-toolbar-tool k-grid-excel k-finProgramGrid-Export" }))
                .ToolBar(search => search.Search())


                .Columns(columns =>
                {


                    columns.Bound(p => p.Description).HtmlAttributes(new { @class = "clickable" }).Width(170);
                    columns.Bound(p => p.ActiveProcess).Filterable(false).Width(90);
                    columns.Bound(p => p.ActiveWeb).Filterable(false).Width(90);
                    columns.Bound(p => p.StartDate).Width(120).Format("{0: MM/dd/yyyy}");
                    columns.Bound(p => p.EndDate).Width(120).Format("{0: MM/dd/yyyy}");
                    columns.Bound(p => p.PaymentTermsCode).HeaderHtmlAttributes(new { style = "text-align: right; justify-content: right" }).HtmlAttributes(new { @class = "align-right" }).Width(100);
                    columns.Bound(p => p.FranchiseeCount).HeaderHtmlAttributes(new { style = "text-align: right; justify-content: right" }).HtmlAttributes(new { @class = "align-right" }).Filterable(false).Width(100);
                    columns.Bound(p => p.StatementFranchiseeCount).HeaderHtmlAttributes(new { style = "text-align: right; justify-content: right" }).HtmlAttributes(new { @class = "align-right" }).Filterable(false).Width(90);
                    columns.Bound(p => p.InvoiceCount).HeaderHtmlAttributes(new { style = "text-align: right; justify-content: right" }).HtmlAttributes(new { @class = "align-right" }).Filterable(false).Width(80);
                    columns.Bound(p => p.StatementCount).HeaderHtmlAttributes(new { style = "text-align: right; justify-content: right" }).HtmlAttributes(new { @class = "align-right" }).Filterable(false).Width(90);
                    columns.Bound(p => p.StoreCount).HeaderHtmlAttributes(new { style = "text-align: right; justify-content: right" }).HtmlAttributes(new { @class = "align-right" }).Filterable(false).Width(80);
                    columns.Bound(p => p.FirstStatementPeriod).HeaderHtmlAttributes(new { style = "text-align: right; justify-content: right" }).HtmlAttributes(new { @class = "align-right" }).Filterable(false).Width(100);
                    columns.Bound(p => p.LastStatementPeriod).HeaderHtmlAttributes(new { style = "text-align: right; justify-content: right" }).HtmlAttributes(new { @class = "align-right" }).Filterable(false).Width(110);
                    columns.Bound(p => p.FirstInvoice).Width(140).Format("{0: MM/dd/yyyy}");
                    columns.Bound(p => p.lastInvoice).Width(120).Format("{0: MM/dd/yyyy}");
                    columns.Bound(p => p.Comments).Filterable(false).Width(100);
                    columns.Bound(p => p.DateAdded).Width(120).Format("{0: MM/dd/yyyy}");
                    columns.Bound(p => p.ProgramID).HeaderHtmlAttributes(new { style = "text-align: right; justify-content: right" }).HtmlAttributes(new { @class = "align-right" }).Width(120).Hidden(true);//.Format("{0: MM/dd/yyyy}");
                    columns.Bound(p => p.CampaignCode).Width(120).Hidden(true);
                })
                .PersistSelection()
                .Filterable()
                .Selectable(selectable => selectable.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
                .Events(events => events.Change("onChange"))
                .Sortable()
                .Pageable(p =>
                {
                    p.PageSizes(new[] { 5, 10, 20, 30, 40, 50 });
                })
                .Groupable()
                .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read.Action("FetchFinprograms", "Invoice"))

                )
                )
        </div>
    </div>
</div>
<script>

    function onChange(e) {
        var selectedRow = this.select();
        var dataItem = this.dataItem(selectedRow);
        var FinPrograms = JSON.stringify(dataItem)
        var rowId = dataItem.ProgramID;
        window.location.href = '@Url.Action("GetFinProgramsFranchisee", "Invoice")?ProgramID=' + rowId;
    }
</script>
<script>
    $(document).ready(function () {
        var gridfin = $('#grid').data('kendoGrid');
        $("#cbx").click(function () {

            if ($("input#cbx").is(":checked")) {
                gridfin.showColumn('ProgramID');
                gridfin.showColumn('CampaignCode');
            }
            else {
                gridfin.hideColumn('ProgramID');
                gridfin.hideColumn('CampaignCode');
            }
        });
    });

    $(document).ready(function () {
        $(".k-finProgramGrid-Export").on('click', function (e) {
            var gridStatement = $("#grid").data("kendoGrid");

            var dataItems = null;
            $.ajax({
                // url: '/Security/GrantOrRestrictAccess',
                url: '@Url.Action("FetchAllFinPrograms", "Invoice")',
                type: 'GET',
                cache: false,
                traditional: true,
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                async: false,
                success: function (response) {

                    dataItems = response;
                },
                error: function () { }
            });
            // Export all data from all pages
            if ($("input#cbx").is(":checked")) {
                var allRows = [{
                    cells: [
                        { value: "Description" },
                        { value: "ActiveProcess" },
                        { value: "ActiveWeb" },
                        { value: "StartDate" },
                        { value: "EndDate" },
                        { value: "Terms" },
                        { value: "#Fran Inv" },
                        { value: "#Fran Stmt" },
                        { value: "#Inv" },
                        { value: "#Stamt" },
                        { value: "#Stores" },
                        { value: "From Stmt" },
                        { value: "To Stmt" },
                        { value: "From Inv Date" },
                        { value: "To Inv Date" },
                        { value: "Comments" },
                        { value: "DateAdded" },
                        { value: "ProgramID" },
                        { value: "CampaignCode" }




                    ]
                }];
                //var dataItems = gridStatement.dataSource.view();
                //  var dataItems = gridStatement.dataSource.data();

                for (var j = 0; j < dataItems.length; j++) {
                    var dataItem = dataItems[j];
                    allRows.push({
                        cells: [
                            { value: dataItem.Description },
                            { value: dataItem.ActiveProcess },
                            { value: dataItem.ActiveWeb },
                            { value: dataItem.StartDate },
                            { value: dataItem.EndDate },
                            { value: dataItem.PaymentTermsCode },
                            { value: dataItem.FranchiseeCount },
                            { value: dataItem.StatementFranchiseeCount },
                            { value: dataItem.InvoiceCount },
                            { value: dataItem.StatementCount },
                            { value: dataItem.StoreCount },
                            { value: dataItem.FirstStatementPeriod },
                            { value: dataItem.LastStatementPeriod },
                            { value: dataItem.FirstInvoice },
                            { value: dataItem.lastInvoice },
                            { value: dataItem.Comments },
                            { value: dataItem.DateAdded },
                            { value: dataItem.ProgramID },
                            { value: dataItem.CampaignCode }



                        ]
                    });
                }
               
          
            }
            else {
                var allRows = [{
                    cells: [
                        { value: "Description" },
                        { value: "ActiveProcess" },
                        { value: "ActiveWeb" },
                        { value: "StartDate" },
                        { value: "EndDate" },
                        { value: "Terms" },
                        { value: "#Fran Inv" },
                        { value: "#Fran Stmt" },
                        { value: "#Inv" },
                        { value: "#Stamt" },
                        { value: "#Stores" },
                        { value: "From Stmt" },
                        { value: "To Stmt" },
                        { value: "From Inv Date" },
                        { value: "To Inv Date" },
                        { value: "Comments" },
                        { value: "DateAdded" },






                    ]
                }];
                //var dataItems = gridStatement.dataSource.view();
                //  var dataItems = gridStatement.dataSource.data();

                for (var j = 0; j < dataItems.length; j++) {
                    var dataItem = dataItems[j];
                    allRows.push({
                        cells: [
                            { value: dataItem.Description },
                            { value: dataItem.ActiveProcess },
                            { value: dataItem.ActiveWeb },
                            { value: dataItem.StartDate },
                            { value: dataItem.EndDate },
                            { value: dataItem.PaymentTermsCode },
                            { value: dataItem.FranchiseeCount },
                            { value: dataItem.StatementFranchiseeCount },
                            { value: dataItem.InvoiceCount },
                            { value: dataItem.StatementCount },
                            { value: dataItem.StoreCount },
                            { value: dataItem.FirstStatementPeriod },
                            { value: dataItem.LastStatementPeriod },
                            { value: dataItem.FirstInvoice },
                            { value: dataItem.lastInvoice },
                            { value: dataItem.Comments },
                            { value: dataItem.DateAdded },




                        ]
                    });
                }
            
            }
            excelExport(allRows);



        });
    });

    function excelExport(rows) {
        var headerStyle = {
            background: "#808080", // Grey background color
            color: "#FFFFFF",      // Text color for better contrast
            bold: true             // Make the text bold
        };
        var headerRow = null;
        //when show systems fields is active
        if ($("input#cbx").is(":checked")) {
            headerRow = {
                cells: [
                    { value: "Description", ...headerStyle },
                    { value: "ActiveProcess", ...headerStyle },
                    { value: "ActiveWeb", ...headerStyle },
                    { value: "StartDate", ...headerStyle },
                    { value: "EndDate", ...headerStyle },
                    { value: "Terms", ...headerStyle },
                    { value: "#Fran Inv", ...headerStyle },
                    { value: "#Fran Stmt", ...headerStyle },
                    { value: "#Inv", ...headerStyle },
                    { value: "Stamt", ...headerStyle },
                    { value: "#Stores", ...headerStyle },
                    { value: "From Stmt", ...headerStyle },
                    { value: "To Stmt", ...headerStyle },
                    { value: "From Inv Date", ...headerStyle },
                    { value: "To Inv Date", ...headerStyle },
                    { value: "Comments", ...headerStyle },
                    { value: "DateAdded", ...headerStyle },
                    { value: "ProgramID", ...headerStyle },
                    { value: "CampaignCode", ...headerStyle }
                ]
            };
        }
        //when show systems fields is inactive
        else {
            headerRow = {
                cells: [
                    { value: "Description", ...headerStyle },
                    { value: "ActiveProcess", ...headerStyle },
                    { value: "ActiveWeb", ...headerStyle },
                    { value: "StartDate", ...headerStyle },
                    { value: "EndDate", ...headerStyle },
                    { value: "Terms", ...headerStyle },
                    { value: "#Fran Inv", ...headerStyle },
                    { value: "#Fran Stmt", ...headerStyle },
                    { value: "#Inv", ...headerStyle },
                    { value: "Stamt", ...headerStyle },
                    { value: "#Stores", ...headerStyle },
                    { value: "From Stmt", ...headerStyle },
                    { value: "To Stmt", ...headerStyle },
                    { value: "From Inv Date", ...headerStyle },
                    { value: "To Inv Date", ...headerStyle },
                    { value: "Comments", ...headerStyle },
                    { value: "DateAdded", ...headerStyle },


                ]
            };
        }
        rows[0] = headerRow;
        var workbook = new kendo.ooxml.Workbook({
            sheets: [
                {
                    columns: [
                        { autoWidth: true },
                        { autoWidth: true },
                        { autoWidth: true },
                        { autoWidth: true },
                        { autoWidth: true },
                        { autoWidth: true },
                        { autoWidth: true },
                        { autoWidth: true },
                        { autoWidth: true },
                        { autoWidth: true },
                        { autoWidth: true },
                        { autoWidth: true },
                        { autoWidth: true },
                        { autoWidth: true },
                        { autoWidth: true },
                        { autoWidth: true },
                        { autoWidth: true },
                        { autoWidth: true },
                        { autoWidth: true }
                    ],
                    title: "FinPrograms",
                    rows: rows
                }
            ]
        });
        kendo.saveAs({ dataURI: workbook.toDataURL(), fileName: "FinPrograms.xlsx" });
    }
</script>
<style>


    .clickable:hover {
        color: blue;
        text-decoration: underline;
    }

</style>